import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1726962897823 implements MigrationInterface {
    name = 'Init1726962897823'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "user_avatar_img" ("user_avatar_img_id" SMALLSERIAL NOT NULL, "file_name" character varying NOT NULL, CONSTRAINT "PK_faa0f4e45cb5ae59b689a9e6359" PRIMARY KEY ("user_avatar_img_id"))`);
        await queryRunner.query(`CREATE TABLE "puzzle" ("puzzle_id" SERIAL NOT NULL, "fen" text NOT NULL, "solution" character varying(255) NOT NULL, "rating" integer NOT NULL, "popularity" smallint NOT NULL, CONSTRAINT "PK_9aba1f4c7e1e9013b8a845e7f8f" PRIMARY KEY ("puzzle_id"))`);
        await queryRunner.query(`CREATE TABLE "user_solved_puzzle" ("user_solved_puzzle_id" SERIAL NOT NULL, "solved_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "user_user_id" integer NOT NULL, "puzzle_puzzle_id" integer NOT NULL, CONSTRAINT "PK_5bcda5209fe8f91a30f85cc227a" PRIMARY KEY ("user_solved_puzzle_id"))`);
        await queryRunner.query(`CREATE TYPE "public"."product_type_enum" AS ENUM('Board', 'Pieces', 'Board and Pieces', 'Reaction')`);
        await queryRunner.query(`CREATE TABLE "product" ("product_id" SERIAL NOT NULL, "name" character varying(255) NOT NULL, "type" "public"."product_type_enum" NOT NULL, "description" character varying(255) NOT NULL, "coins_cost" integer NOT NULL, "content" json NOT NULL, CONSTRAINT "CHK_07d9712cb8a920b756645d7517" CHECK (coins_cost >= 0), CONSTRAINT "PK_1de6a4421ff0c410d75af27aeee" PRIMARY KEY ("product_id"))`);
        await queryRunner.query(`CREATE TABLE "user_bought_product" ("user_bought_product_id" SERIAL NOT NULL, "purchase_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "user_user_id" integer NOT NULL, "product_product_id" integer NOT NULL, CONSTRAINT "PK_bf36904585ed33c8bcbd1d2cb2d" PRIMARY KEY ("user_bought_product_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_user_bought_products_user_id" ON "user_bought_product" ("user_user_id", "product_product_id") `);
        await queryRunner.query(`CREATE TABLE "game_mode" ("game_mode_id" SMALLSERIAL NOT NULL, "mode" character varying(255) NOT NULL, CONSTRAINT "PK_2d399c0d78436014f5c786bb616" PRIMARY KEY ("game_mode_id"))`);
        await queryRunner.query(`CREATE TABLE "arcade_modifiers" ("arcade_modifier_id" SMALLSERIAL NOT NULL, "modifier_name" character varying(255) NOT NULL, CONSTRAINT "PK_aba05860b9d9277e1b4525322e1" PRIMARY KEY ("arcade_modifier_id"))`);
        await queryRunner.query(`CREATE TABLE "game_with_arcade_modifiers" ("game_with_arcade_modifiers_id" SERIAL NOT NULL, "game_game_id" integer NOT NULL, "arcade_modifier_arcade_modifier_id" smallint NOT NULL, CONSTRAINT "PK_3adf3282776ca503de703230fcf" PRIMARY KEY ("game_with_arcade_modifiers_id"))`);
        await queryRunner.query(`CREATE TYPE "public"."game_winner_enum" AS ENUM('White', 'Black', 'Draw')`);
        await queryRunner.query(`CREATE TYPE "public"."game_result_type_enum" AS ENUM('On Time', 'Draw offer', 'Abandon', 'Resign', 'Stalemate', 'N Moves Rule', 'Check Mate')`);
        await queryRunner.query(`CREATE TYPE "public"."game_type_pairing_enum" AS ENUM('Link Shared', 'Friend Req', 'Random Pairing')`);
        await queryRunner.query(`CREATE TABLE "game" ("game_id" SERIAL NOT NULL, "game_timestamp" TIMESTAMP WITH TIME ZONE, "pgn" text NOT NULL, "winner" "public"."game_winner_enum", "whites_player_time" integer, "blacks_player_time" integer, "elo_whites_before_game" integer, "elo_whites_after_game" integer, "elo_blacks_before_game" integer, "elo_blacks_after_game" integer, "result_type" "public"."game_result_type_enum", "type_pairing" "public"."game_type_pairing_enum", "whites_player_user_id" integer, "blacks_player_user_id" integer, "game_mode_game_mode_id" smallint, CONSTRAINT "CHK_b2fb04e6ced007be117b02b8be" CHECK (elo_whites_before_game >= 0 AND elo_whites_after_game >= 0 AND elo_whites_after_game >= 0 AND elo_blacks_after_game >= 0), CONSTRAINT "CHK_ac49646f3daeb3801204bdd1c5" CHECK (whites_player_time >= 0 AND blacks_player_time >= 0), CONSTRAINT "PK_5b09eea8ea244730f3f339e3152" PRIMARY KEY ("game_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_game_whites_player_ids" ON "game" ("whites_player_user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_game_blacks_player_ids" ON "game" ("blacks_player_user_id") `);
        await queryRunner.query(`CREATE TABLE "notification_type" ("notification_type_id" SERIAL NOT NULL, "type" character varying NOT NULL, CONSTRAINT "PK_c6c64acfd916f191846840ac43a" PRIMARY KEY ("notification_type_id"))`);
        await queryRunner.query(`CREATE TABLE "notification" ("notification_id" SERIAL NOT NULL, "title" character varying NOT NULL, "message" text NOT NULL, "action_link1" character varying NOT NULL, "action_text1" character varying NOT NULL, "action_link2" character varying NOT NULL, "action_text2" character varying NOT NULL, "is_read" boolean NOT NULL DEFAULT false, "time_stamp" TIMESTAMP WITH TIME ZONE NOT NULL, "user_who_send_user_id" integer, "user_who_receive_user_id" integer NOT NULL, "notification_type_notification_type_id" integer NOT NULL, CONSTRAINT "PK_fc4db99eb33f32cea47c5b6a39c" PRIMARY KEY ("notification_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_notifications_user_id" ON "notification" ("user_who_receive_user_id") `);
        await queryRunner.query(`CREATE TABLE "club_post" ("post_id" SERIAL NOT NULL, "content" text, "img_file_name" character varying(255), "total_likes" smallint NOT NULL DEFAULT '0', "post_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "user_user_id" integer NOT NULL, "club_club_id" integer NOT NULL, CONSTRAINT "PK_c07ca571b1ea8ba6ea5b965bc4d" PRIMARY KEY ("post_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_club_posts_club_id" ON "club_post" ("club_club_id") `);
        await queryRunner.query(`CREATE TABLE "clubs" ("club_id" SERIAL NOT NULL, "name" character varying(255) NOT NULL, "description" character varying(255) NOT NULL, "img_file_name" character varying(255) NOT NULL, "creation_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), CONSTRAINT "PK_865b9a142053b65722a64066698" PRIMARY KEY ("club_id"))`);
        await queryRunner.query(`CREATE TYPE "public"."user_in_club_role_enum" AS ENUM('ADMIN', 'MEMBER')`);
        await queryRunner.query(`CREATE TABLE "user_in_club" ("user_in_club_id" SERIAL NOT NULL, "join_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "role" "public"."user_in_club_role_enum" NOT NULL DEFAULT 'MEMBER', "user_user_id" integer NOT NULL, "club_club_id" integer NOT NULL, CONSTRAINT "PK_f32399f8be1235c788217cf54b4" PRIMARY KEY ("user_in_club_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_users_clubs_user_id" ON "user_in_club" ("user_user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_members_club_id" ON "user_in_club" ("club_club_id") `);
        await queryRunner.query(`CREATE TABLE "club_post_comment" ("comment_id" SERIAL NOT NULL, "content" text NOT NULL, "comment_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "user_user_id" integer NOT NULL, "post_post_id" integer NOT NULL, CONSTRAINT "PK_57a59b7a0924af7ba68d8a7d9be" PRIMARY KEY ("comment_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_comments_post_id" ON "club_post_comment" ("post_post_id") `);
        await queryRunner.query(`CREATE TABLE "user" ("user_id" SERIAL NOT NULL, "nickname" character varying(255) NOT NULL, "email" character varying(255) NOT NULL, "password" character varying(255) NOT NULL, "date_of_birth" date, "country_code" character varying(3) NOT NULL, "about_text" text NOT NULL, "elo_rapid" integer NOT NULL, "elo_blitz" integer NOT NULL, "elo_bullet" integer NOT NULL, "elo_arcade" integer NOT NULL, "current_coins" integer NOT NULL, "acumulated_all_time_coins" integer NOT NULL, "n_puzzles_solved" integer NOT NULL DEFAULT '0', "streak_days" smallint NOT NULL DEFAULT '0', "is_deleted" boolean NOT NULL DEFAULT false, "user_avatar_img_user_avatar_img_id" smallint, CONSTRAINT "UQ_e2364281027b926b879fa2fa1e0" UNIQUE ("nickname"), CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "CHK_ce78a67868e7e9a9a62c8b1faa" CHECK (current_coins >= 0 AND acumulated_all_time_coins >= 0), CONSTRAINT "CHK_15e7bb587c850e4f22075ac2ed" CHECK (elo_rapid >= 0 AND elo_blitz >= 0 AND elo_bullet >= 0 AND elo_arcade >= 0), CONSTRAINT "PK_758b8ce7c18b9d347461b30228d" PRIMARY KEY ("user_id"))`);
        await queryRunner.query(`CREATE INDEX "idx_nickname" ON "user" ("nickname") `);
        await queryRunner.query(`CREATE INDEX "idx_email" ON "user" ("email") `);
        await queryRunner.query(`CREATE INDEX "idx_elo_rapid" ON "user" ("elo_rapid") `);
        await queryRunner.query(`CREATE INDEX "idx_elo_blitz" ON "user" ("elo_blitz") `);
        await queryRunner.query(`CREATE INDEX "idx_elo_bullet" ON "user" ("elo_bullet") `);
        await queryRunner.query(`CREATE INDEX "idx_elo_arcade" ON "user" ("elo_arcade") `);
        await queryRunner.query(`CREATE TABLE "club_post_likes_user" ("club_post_post_id" integer NOT NULL, "user_user_id" integer NOT NULL, CONSTRAINT "PK_1d49f5c8992d3e28e93af1c3b11" PRIMARY KEY ("club_post_post_id", "user_user_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_efb72a9f7d7d2f825aedc72642" ON "club_post_likes_user" ("club_post_post_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_fb7f6ca330b6e54ec97d9a3132" ON "club_post_likes_user" ("user_user_id") `);
        await queryRunner.query(`CREATE TABLE "user_friends_user" ("user_user_id_1" integer NOT NULL, "user_user_id_2" integer NOT NULL, CONSTRAINT "PK_1d030b5a1582100d8543a5b45f0" PRIMARY KEY ("user_user_id_1", "user_user_id_2"))`);
        await queryRunner.query(`CREATE INDEX "IDX_e69a369dc059fd60e6a4c00cf2" ON "user_friends_user" ("user_user_id_1") `);
        await queryRunner.query(`CREATE INDEX "IDX_b181a10bfb771f67ae8528ed53" ON "user_friends_user" ("user_user_id_2") `);
        await queryRunner.query(`ALTER TABLE "user_solved_puzzle" ADD CONSTRAINT "FK_83739f682bc73d366d967b3ccc7" FOREIGN KEY ("user_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_solved_puzzle" ADD CONSTRAINT "FK_c94bc6a14b7693e87b42cb53fab" FOREIGN KEY ("puzzle_puzzle_id") REFERENCES "puzzle"("puzzle_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_bought_product" ADD CONSTRAINT "FK_4f3d10803437b0c40c94ef76f1e" FOREIGN KEY ("user_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_bought_product" ADD CONSTRAINT "FK_daa02edf9885ce30d8c9e6f15ea" FOREIGN KEY ("product_product_id") REFERENCES "product"("product_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "game_with_arcade_modifiers" ADD CONSTRAINT "FK_7ecce38d4a320779809d5430871" FOREIGN KEY ("game_game_id") REFERENCES "game"("game_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "game_with_arcade_modifiers" ADD CONSTRAINT "FK_b9f106fc4633a070fd9cfdece7d" FOREIGN KEY ("arcade_modifier_arcade_modifier_id") REFERENCES "arcade_modifiers"("arcade_modifier_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "game" ADD CONSTRAINT "FK_251d839027a3a32403b7f7d48ba" FOREIGN KEY ("whites_player_user_id") REFERENCES "user"("user_id") ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "game" ADD CONSTRAINT "FK_70ca59a1958bea61fa869205086" FOREIGN KEY ("blacks_player_user_id") REFERENCES "user"("user_id") ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "game" ADD CONSTRAINT "FK_c0271687f22dd2f85c6a923a3c7" FOREIGN KEY ("game_mode_game_mode_id") REFERENCES "game_mode"("game_mode_id") ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "notification" ADD CONSTRAINT "FK_fe8062d90b8cfbc7fd5cc917632" FOREIGN KEY ("user_who_send_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "notification" ADD CONSTRAINT "FK_e527bea8f7747ee43a10bc46884" FOREIGN KEY ("user_who_receive_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "notification" ADD CONSTRAINT "FK_3449b54a03381da49713e1b76a2" FOREIGN KEY ("notification_type_notification_type_id") REFERENCES "notification_type"("notification_type_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "club_post" ADD CONSTRAINT "FK_b8b8abc700a5a6737ce210dad9b" FOREIGN KEY ("user_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "club_post" ADD CONSTRAINT "FK_316bcc85fc3ba643e58091acf7c" FOREIGN KEY ("club_club_id") REFERENCES "clubs"("club_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_in_club" ADD CONSTRAINT "FK_2d5f028f76b9e3dc2680c05cf25" FOREIGN KEY ("user_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_in_club" ADD CONSTRAINT "FK_139db13dbe51e6abd29425054da" FOREIGN KEY ("club_club_id") REFERENCES "clubs"("club_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "club_post_comment" ADD CONSTRAINT "FK_7616014b914124be431269533a1" FOREIGN KEY ("user_user_id") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "club_post_comment" ADD CONSTRAINT "FK_4b8d97f1f980ec14879eb56746b" FOREIGN KEY ("post_post_id") REFERENCES "club_post"("post_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_0f51246e71fa4a1ea7a8f2b48e2" FOREIGN KEY ("user_avatar_img_user_avatar_img_id") REFERENCES "user_avatar_img"("user_avatar_img_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "club_post_likes_user" ADD CONSTRAINT "FK_efb72a9f7d7d2f825aedc726425" FOREIGN KEY ("club_post_post_id") REFERENCES "club_post"("post_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "club_post_likes_user" ADD CONSTRAINT "FK_fb7f6ca330b6e54ec97d9a3132c" FOREIGN KEY ("user_user_id") REFERENCES "user"("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_friends_user" ADD CONSTRAINT "FK_e69a369dc059fd60e6a4c00cf24" FOREIGN KEY ("user_user_id_1") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_friends_user" ADD CONSTRAINT "FK_b181a10bfb771f67ae8528ed538" FOREIGN KEY ("user_user_id_2") REFERENCES "user"("user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_friends_user" DROP CONSTRAINT "FK_b181a10bfb771f67ae8528ed538"`);
        await queryRunner.query(`ALTER TABLE "user_friends_user" DROP CONSTRAINT "FK_e69a369dc059fd60e6a4c00cf24"`);
        await queryRunner.query(`ALTER TABLE "club_post_likes_user" DROP CONSTRAINT "FK_fb7f6ca330b6e54ec97d9a3132c"`);
        await queryRunner.query(`ALTER TABLE "club_post_likes_user" DROP CONSTRAINT "FK_efb72a9f7d7d2f825aedc726425"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_0f51246e71fa4a1ea7a8f2b48e2"`);
        await queryRunner.query(`ALTER TABLE "club_post_comment" DROP CONSTRAINT "FK_4b8d97f1f980ec14879eb56746b"`);
        await queryRunner.query(`ALTER TABLE "club_post_comment" DROP CONSTRAINT "FK_7616014b914124be431269533a1"`);
        await queryRunner.query(`ALTER TABLE "user_in_club" DROP CONSTRAINT "FK_139db13dbe51e6abd29425054da"`);
        await queryRunner.query(`ALTER TABLE "user_in_club" DROP CONSTRAINT "FK_2d5f028f76b9e3dc2680c05cf25"`);
        await queryRunner.query(`ALTER TABLE "club_post" DROP CONSTRAINT "FK_316bcc85fc3ba643e58091acf7c"`);
        await queryRunner.query(`ALTER TABLE "club_post" DROP CONSTRAINT "FK_b8b8abc700a5a6737ce210dad9b"`);
        await queryRunner.query(`ALTER TABLE "notification" DROP CONSTRAINT "FK_3449b54a03381da49713e1b76a2"`);
        await queryRunner.query(`ALTER TABLE "notification" DROP CONSTRAINT "FK_e527bea8f7747ee43a10bc46884"`);
        await queryRunner.query(`ALTER TABLE "notification" DROP CONSTRAINT "FK_fe8062d90b8cfbc7fd5cc917632"`);
        await queryRunner.query(`ALTER TABLE "game" DROP CONSTRAINT "FK_c0271687f22dd2f85c6a923a3c7"`);
        await queryRunner.query(`ALTER TABLE "game" DROP CONSTRAINT "FK_70ca59a1958bea61fa869205086"`);
        await queryRunner.query(`ALTER TABLE "game" DROP CONSTRAINT "FK_251d839027a3a32403b7f7d48ba"`);
        await queryRunner.query(`ALTER TABLE "game_with_arcade_modifiers" DROP CONSTRAINT "FK_b9f106fc4633a070fd9cfdece7d"`);
        await queryRunner.query(`ALTER TABLE "game_with_arcade_modifiers" DROP CONSTRAINT "FK_7ecce38d4a320779809d5430871"`);
        await queryRunner.query(`ALTER TABLE "user_bought_product" DROP CONSTRAINT "FK_daa02edf9885ce30d8c9e6f15ea"`);
        await queryRunner.query(`ALTER TABLE "user_bought_product" DROP CONSTRAINT "FK_4f3d10803437b0c40c94ef76f1e"`);
        await queryRunner.query(`ALTER TABLE "user_solved_puzzle" DROP CONSTRAINT "FK_c94bc6a14b7693e87b42cb53fab"`);
        await queryRunner.query(`ALTER TABLE "user_solved_puzzle" DROP CONSTRAINT "FK_83739f682bc73d366d967b3ccc7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b181a10bfb771f67ae8528ed53"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e69a369dc059fd60e6a4c00cf2"`);
        await queryRunner.query(`DROP TABLE "user_friends_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fb7f6ca330b6e54ec97d9a3132"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_efb72a9f7d7d2f825aedc72642"`);
        await queryRunner.query(`DROP TABLE "club_post_likes_user"`);
        await queryRunner.query(`DROP INDEX "public"."idx_elo_arcade"`);
        await queryRunner.query(`DROP INDEX "public"."idx_elo_bullet"`);
        await queryRunner.query(`DROP INDEX "public"."idx_elo_blitz"`);
        await queryRunner.query(`DROP INDEX "public"."idx_elo_rapid"`);
        await queryRunner.query(`DROP INDEX "public"."idx_email"`);
        await queryRunner.query(`DROP INDEX "public"."idx_nickname"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP INDEX "public"."idx_comments_post_id"`);
        await queryRunner.query(`DROP TABLE "club_post_comment"`);
        await queryRunner.query(`DROP INDEX "public"."idx_members_club_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_users_clubs_user_id"`);
        await queryRunner.query(`DROP TABLE "user_in_club"`);
        await queryRunner.query(`DROP TYPE "public"."user_in_club_role_enum"`);
        await queryRunner.query(`DROP TABLE "clubs"`);
        await queryRunner.query(`DROP INDEX "public"."idx_club_posts_club_id"`);
        await queryRunner.query(`DROP TABLE "club_post"`);
        await queryRunner.query(`DROP INDEX "public"."idx_notifications_user_id"`);
        await queryRunner.query(`DROP TABLE "notification"`);
        await queryRunner.query(`DROP TABLE "notification_type"`);
        await queryRunner.query(`DROP INDEX "public"."idx_game_blacks_player_ids"`);
        await queryRunner.query(`DROP INDEX "public"."idx_game_whites_player_ids"`);
        await queryRunner.query(`DROP TABLE "game"`);
        await queryRunner.query(`DROP TYPE "public"."game_type_pairing_enum"`);
        await queryRunner.query(`DROP TYPE "public"."game_result_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."game_winner_enum"`);
        await queryRunner.query(`DROP TABLE "game_with_arcade_modifiers"`);
        await queryRunner.query(`DROP TABLE "arcade_modifiers"`);
        await queryRunner.query(`DROP TABLE "game_mode"`);
        await queryRunner.query(`DROP INDEX "public"."idx_user_bought_products_user_id"`);
        await queryRunner.query(`DROP TABLE "user_bought_product"`);
        await queryRunner.query(`DROP TABLE "product"`);
        await queryRunner.query(`DROP TYPE "public"."product_type_enum"`);
        await queryRunner.query(`DROP TABLE "user_solved_puzzle"`);
        await queryRunner.query(`DROP TABLE "puzzle"`);
        await queryRunner.query(`DROP TABLE "user_avatar_img"`);
    }

}
